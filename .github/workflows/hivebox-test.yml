name: HiveBox CI
on:
    push:
      branches:
        - 'release/*'
        - 'testing/*'
        - 'feature/*'
        - 'dev'
        - main
      paths-ignore:
        - README.md

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Setup Go and lint  
              uses: actions/setup-go@v5
              with:
                go-version: '1.22'

            - name: Run golangci-lint
              uses: golangci/golangci-lint-action@v6
              with:
                version: latest    

            - name: Lint Dockerfile
              uses: hadolint/hadolint-action@v3.1.0
              with:
                dockerfile: Dockerfile

    build:
        runs-on: ubuntu-latest
        needs: lint
        steps:
          - name: Checkout repository
            uses: actions/checkout@v4

          - name: Extract version from tag/branch
            run: echo "VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV  

          - name: Build Docker Image
            run: docker build -f Dockerfile -t hivebox:latest .

          - name: Save Docker Image as Artifact
            run: docker save hivebox:latest -o hivebox.tar

          - name: Upload Docker Image Artifact
            uses: actions/upload-artifact@v4
            with:
              name: hivebox-image
              path: hivebox.tar    
            
    test:
      runs-on: ubuntu-latest
      needs: build
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Download Docker Image Artifact
          uses: actions/download-artifact@v4
          with:
            name: hivebox-image

        - name: Load Docker Image
          run: docker load -i hivebox.tar

        - name: Run unit tests
          run: go test ./... -v

        - name: Test /version endpoint
          run: |
            docker run -d -p 8080:8080 hivebox:latest

            TIMEOUT=300
            TIME_ELAPSED=0

            until curl -s http://localhost:8080/versionl; do
              if [ $T"IME_ELAPSED -ge $TIMEOUT ]; then
                echo "[ERROR] Timeout reached after $TIMEOUT seconds, stopping the pipeline..."
                exit 1
              fi

              echo "[INFO] Waiting for hivebox container..."
              sleep 5
              TIME_ELAPSED=$((TIME_ELAPSED + 5))

            done

            echo "[OK] /version test has been completed succesfully"